(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{371:function(n,t,a){"use strict";a.r(t);var e=a(42),s=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"使用-nginx-容器部署前后台项目并实现负载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-nginx-容器部署前后台项目并实现负载"}},[n._v("#")]),n._v(" 使用 nginx 容器部署前后台项目并实现负载")]),n._v(" "),a("h3",{attrs:{id:"_1-拉取镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-拉取镜像"}},[n._v("#")]),n._v(" 1.拉取镜像")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("docker pull nginx\n")])])]),a("h3",{attrs:{id:"_2-运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-运行"}},[n._v("#")]),n._v(" 2.运行")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('docker run -it --name "nginx" -p 8080:80 -d nginx\n')])])]),a("h3",{attrs:{id:"_3-验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-验证"}},[n._v("#")]),n._v(" 3.验证")]),n._v(" "),a("p",[n._v("http://39.97.184.218:8080/")]),n._v(" "),a("h3",{attrs:{id:"_4-nginx-的默认路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-nginx-的默认路径"}},[n._v("#")]),n._v(" 4.nginx 的默认路径")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("(1) Nginx配置路径：/etc/nginx/\n(2) PID目录：/var/run/nginx.pid\n(3) 错误日志：/var/log/nginx/error.log\n(4) 访问日志：/var/log/nginx/access.log\n(5) 默认站点目录：/usr/share/nginx/html\n")])])]),a("h3",{attrs:{id:"_5-把自己定义的-nginx-conf-挂载在-docker-中的-nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-把自己定义的-nginx-conf-挂载在-docker-中的-nginx"}},[n._v("#")]),n._v(" 5.把自己定义的 nginx.conf 挂载在 docker 中的 nginx")]),n._v(" "),a("ul",[a("li",[n._v("1.创建挂载目录")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("mkdir -p /usr/dokcer_nginx_data/{conf,conf.d,html,log}\n")])])]),a("ul",[a("li",[n._v("2 启动挂载后的容器")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("docker run --name damsp -d -p 18089:80 \\\n-v /usr/local/niu/mynginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro \\\n-v /usr/local/niu/mynginx/log:/var/log/nginx \\\n-v /usr/local/niu/mynginx/html:/usr/share/nginx/html \\\n-v /usr/local/niu/mynginx/conf.d:/etc/nginx/conf.d \\\nnginx\n")])])]),a("p",[a("em",[n._v("第一个-v：挂载 nginx 的主配置文件，以方便在宿主机上直接修改容器的配置文件")])]),n._v(" "),a("p",[a("em",[n._v("第二个-v：挂载容器内 nginx 的日志，容器运行起来之后，可以直接在宿主机的这个目录中查看 nginx 日志")])]),n._v(" "),a("p",[a("em",[n._v("第三个-v：挂载静态页面目录")])]),n._v(" "),a("blockquote",[a("p",[n._v("这里直接启动有个问题，报错如下,意思是：不能将一个文件夹挂载到一个文件上。（nginx.conf 的锅）")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("......: Are you trying to mount a directory onto a file (or vice-versa)? Check if the specified host path exists and is the expected type.\n")])])]),a("blockquote",[a("p",[n._v("试一下不挂载 nginx.conf 文件，能够挂载成功")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("docker run --name nginx-6601 -d -p 8900:6601\\\n  -v /usr/mynginx/log:/var/log/nginx\\\n  -v /usr/mynginx/html:/usr/share/nginx/html\\\n  -v /usr/mynginx/conf.d:/etc/nginx/conf.d\\\n  nginx\n")])])]),a("p",[n._v("这一块有个很大的坑，docker 是不推荐直接挂载文件的，使用-v 命令，会首先会查询宿主主机上查看有没有你设置的目录，如果没有的话会自动创建一个，所以我们没必要在宿主主机上去创建挂载目录了。直接执行第二步，然后会报错，在宿主主机上找到 mynginx 文件夹删掉里边的"),a("code",[n._v("nginx.conf文件夹")]),n._v("，把你的"),a("code",[n._v("nginx.conf文件")]),n._v("放进去，删掉当前运行的容器，重新按第二步的命令进行启动。容器启动成功，挂载成功。")]),n._v(" "),a("p",[n._v("这个时候我们就可以直接对宿主主机进行操作了，更改完配置文件后，记得 restart 一下容器。")]),n._v(" "),a("h3",{attrs:{id:"_6-配置-nginx-实现负载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-配置-nginx-实现负载"}},[n._v("#")]),n._v(" 6.配置 nginx 实现负载")]),n._v(" "),a("p",[a("strong",[n._v("nginx.conf")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    keepalive_timeout  65;\n    client_max_body_size 200m;\n\n#start\n    server{\n        listen 6501;\n        server_name 39.97.184.218;\n\n        location  / {\n\t\t\troot  /usr/share/nginx/html/fn1/dams;\n            index  index.html;\n\t\t}\n    }\n\n    server{\n        listen 6502;\n        server_name 39.97.184.218;\n\n        location  / {\n\t\t\troot  /usr/share/nginx/html/fn2/dams;\n            index  index.html;\n\t\t}\n    }\n\n    upstream fn {\n        server localhost:6501;\n        server localhost:6502;\n\t}\n\n    server {\n        listen        80;\n        server_name  localhost;\n        location / {\n            proxy_pass   http://fn;\n            index  index.html index.htm;\n        }\n    }\n#end\n}\n")])])]),a("p",[n._v("宿主主机的 8089 端口映射到了 nginx 的 80")]),n._v(" "),a("p",[n._v("http://39.97.184.218:8089/")]),n._v(" "),a("p",[n._v("效果如下图：")]),n._v(" "),a("p",[n._v("1")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://imgchr.com/i/tkMQ1A",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://s1.ax1x.com/2020/05/27/tkMQ1A.png",alt:"tkMQ1A.png"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("2")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://s1.ax1x.com/2020/05/27/tkMufH.png",alt:"tkMufH.png"}})]),n._v(" "),a("h3",{attrs:{id:"_7-添加静态文件夹服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-添加静态文件夹服务"}},[n._v("#")]),n._v(" 7.添加静态文件夹服务")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("  location /upload/ {\n            alias /usr/share/nginx/html/images/;\n            autoindex on; //显示索引\n            autoindex_exact_size on; //显示大小\n            autoindex_localtime on;   //显示时间\n        }\n")])])]),a("p",[n._v("http://39.97.184.218:8089/upload/1.png")]),n._v(" "),a("h3",{attrs:{id:"_8-net-host-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-net-host-命令"}},[n._v("#")]),n._v(" 8.--net=host 命令")]),n._v(" "),a("p",[n._v("Docker 中的 host 模式指定是容器与主机享受相同的 network namespace，在这种情况下，我们访问主机端口就能访问我们的容器。比如说我们运行 tomcat 容器并且用\n"),a("code",[n._v("-- network=host")]),n._v(" 来指定我们的网络模式为 host，这样我们访问本机的 8080 端口就能访问到我们的 tomcat 容器。下面这段是官网对于 host 模式的定义:")]),n._v(" "),a("h3",{attrs:{id:"_9-启动第-coral-isc-节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-启动第-coral-isc-节点"}},[n._v("#")]),n._v(" 9 启动第 coral-isc 节点")]),n._v(" "),a("h4",{attrs:{id:"_1-coral-isc-web"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-coral-isc-web"}},[n._v("#")]),n._v(" 1. coral-isc-web")]),n._v(" "),a("p",[n._v("nginx.conf")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\tserver {\n\t\tlisten 8090;\n\t\tserver_name  39.97.184.218;\n\t\tlocation  /  {\n\t\t\troot  /usr/local/niu/coral-isc-web/web;\n\t\t\tindex  index.html;\n\t\t}\n\t}\n")])])]),a("p",[n._v("容器命令:")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("docker run -it -d  --name coral-isc-web -v /usr/local/niu/coral-isc-web/nginx.conf:/etc/nginx/nginx.conf -v  /usr/local/niu/coral-isc-web/web:/usr/local/niu/coral-isc-web/web --privileged --net=host nginx\n")])])]),a("p",[n._v("访问：http://39.97.184.218:8090/")]),n._v(" "),a("h4",{attrs:{id:"_2-coral-isc-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-coral-isc-server"}},[n._v("#")]),n._v(" 2. coral-isc-server")]),n._v(" "),a("p",[n._v("nginx.conf")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\tserver {\n\t\tlisten 8091;\n\t\tserver_name  39.97.184.218;\n\t\tlocation  /  {\n\t\t\troot  /usr/local/niu/coral-isc-server/server;\n\t\t\tindex  index.html;\n\t\t}\n\t}\n")])])]),a("p",[n._v("容器命令:")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("docker run -it -d  --name coral-isc-server -v /usr/local/niu/coral-isc-server/nginx.conf:/etc/nginx/nginx.conf -v  /usr/local/niu/coral-isc-server/server:/usr/local/niu/coral-isc-server/server --privileged --net=host nginx\n")])])]),a("p",[n._v("访问：http://39.97.184.218:8091/")]),n._v(" "),a("p",[n._v("server 中应该部署 coral-isc 的 war 包。")]),n._v(" "),a("h4",{attrs:{id:"_3-pams"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-pams"}},[n._v("#")]),n._v(" 3. pams")]),n._v(" "),a("p",[n._v("nginx.conf")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\tserver {\n\t\tlisten 8092;\n\t\tserver_name  39.97.184.218;\n\t\tlocation  /  {\n\t\t\troot  /usr/local/niu/pams/pams-vue;\n\t\t\tindex  index.html;\n\t\t}\n\t}\n")])])]),a("p",[n._v("容器命令:")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("docker run -it -d  --name pams -v /usr/local/niu/pams/nginx.conf:/etc/nginx/nginx.conf -v  /usr/local/niu/pams/pams-vue:/usr/local/niu/pams/pams-vue --privileged --net=host nginx\n")])])]),a("p",[n._v("访问：http://39.97.184.218:8092/")])])}),[],!1,null,null,null);t.default=s.exports}}]);