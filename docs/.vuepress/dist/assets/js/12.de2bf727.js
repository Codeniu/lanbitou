(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{365:function(t,a,e){"use strict";e.r(a);var n=e(42),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"容器改名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器改名"}},[t._v("#")]),t._v(" 容器改名")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker rename <container name> <newcontainer name>\n")])])]),e("h3",{attrs:{id:"基本命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本命令"}},[t._v("#")]),t._v(" 基本命令")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命令")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("docker ps -a")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),e("tr",[e("td",[t._v("docker ps -l")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),e("tr",[e("td",[t._v("docker start "),e("container",{attrs:{id:""}})],1),t._v(" "),e("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),e("tr",[e("td",[t._v("docker stop "),e("contaienr",{attrs:{name:""}})],1),t._v(" "),e("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),e("tr",[e("td",[t._v("docker rm "),e("contaienr",{attrs:{name:""}})],1),t._v(" "),e("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),e("tr",[e("td",[t._v("docker top "),e("contaienr",{attrs:{name:""}})],1),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("查看 WEB 应用程序容器的进程")])]),t._v(" "),e("tr",[e("td",[t._v("docker inspect"),e("contaienr",{attrs:{name:""}})],1),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("查看 Docker 的底层信息")])])])]),t._v(" "),e("h3",{attrs:{id:"运行容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行容器"}},[t._v("#")]),t._v(" 运行容器")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ docker run --name nginx-test -p 8080:80 -d nginx\n$ docker run --name <your container name> -p <local port:container port> -d <image name>\n\t\t\t\t\t容器名\t\t\t\t\t\t\t本地端口：容器端口\t\t\t\t\t镜像名\n")])])]),e("p",[t._v("参数说明：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("--name nginx-test")]),t._v("：容器名称。")]),t._v(" "),e("li",[e("strong",[t._v("-p 8080:80")]),t._v("： 端口进行映射，将本地 8080 端口映射到容器内部的 80 端口。")]),t._v(" "),e("li",[t._v("**-d **： 设置容器在在后台一直运行。")])]),t._v(" "),e("h3",{attrs:{id:"进入容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进入容器"}},[t._v("#")]),t._v(" 进入容器")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ docker exec -it nginx-test bash\n$ docker exec -it <contaienr name>\n")])])]),e("p",[t._v("参数说明：")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("--it")]),t._v("：i 是交互模式，t 显示终端，是一个伪"),e("code",[t._v("tty")]),t._v("终端。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("-i")]),t._v(" 保证容器的"),e("code",[t._v("STDIN")]),t._v("（持久的标准输入）是开启的。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("-t")]),t._v(" 为创建的容器分配一个伪 tty 终端")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("bash")]),t._v("：命令行交互")])])]),t._v(" "),e("h3",{attrs:{id:"保存容器副本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#保存容器副本"}},[t._v("#")]),t._v(" 保存容器副本")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('docker commit -m="has update" -a="niu" <container id> <author>/<image name>:<tag>\n')])])]),e("p",[t._v("例子")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('docker commit -m="has update" -a="runoob" e218edb10161 runoob/ubuntu:v2\n')])])]),e("p",[t._v("参数说明：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("-m")]),t._v("：提交的描述。")]),t._v(" "),e("li",[e("strong",[t._v("-a")]),t._v("：作者。")])]),t._v(" "),e("h2",{attrs:{id:"容器状态为-exit-1-时的处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器状态为-exit-1-时的处理"}},[t._v("#")]),t._v(" 容器状态为 Exit（1）时的处理")]),t._v(" "),e("p",[t._v("1.第一步查看日志")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker logs -f <container name>\n")])])]),e("p",[t._v("一般在这就能找到问题：可以看到是我们的配置文件有问题")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('[root@iz2ze7hl9oxqoqpukjw25 containers]# docker logs -f nginx2\nnginx: [emerg] unknown directive "//显示索引" in /etc/nginx/nginx.conf:50\nnginx: [emerg] unknown directive "//显示索引" in /etc/nginx/nginx.conf:50\nnginx: [emerg] unexpected "}" in /etc/nginx/nginx.conf:52\nnginx: [emerg] unknown directive "//显示索引" in /etc/nginx/nginx.conf:50\n')])])]),e("h2",{attrs:{id:"运行一些常用的容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行一些常用的容器"}},[t._v("#")]),t._v(" 运行一些常用的容器")]),t._v(" "),e("h3",{attrs:{id:"redis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[t._v("#")]),t._v(" redis")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker run -itd --name redis-test -p 3396:3396 redis\n")])])]),e("h3",{attrs:{id:"mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[t._v("#")]),t._v(" mysql")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("docker run -itd --name mysql-niu -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);