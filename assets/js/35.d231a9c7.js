(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{389:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),s("p",[t._v("docker 学习笔记")])]),t._v(" "),s("h2",{attrs:{id:"docker-的基本命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-的基本命令"}},[t._v("#")]),t._v(" Docker 的基本命令")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("容器运行状态\ndocker stats\n\n查看运行的容器\ndocer ps -a\n\n停止所有容器\ndocker stop $(docker ps -a -q)\n\n删除所有已经停止的容器\ndocker rm $(docker ps -a -q)\n\n\n\n")])])]),s("p",[t._v("文件复制")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("从主机复制到容器\nsudo docker cp host_path containerID:container_path\n从容器复制到主机\nsudo docker cp containerID:container_path host_path\n")])])]),s("h2",{attrs:{id:"cicd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cicd"}},[t._v("#")]),t._v(" CICD")]),t._v(" "),s("h3",{attrs:{id:"启动-runner"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-runner"}},[t._v("#")]),t._v(" 启动 runner：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" $ docker run -d --name gitlab-runner --restart always \\\n   -v /srv/gitlab-runner/config:/etc/gitlab-runner \\\n   -v /var/run/docker.sock:/var/run/docker.sock \\\n   gitlab/gitlab-runner:latest\n")])])]),s("p",[t._v("一些容器运行时需要挂载**/var/run/docker.sock**文件。"),s("strong",[t._v("这个文件是什么呢？为什么有些容器需要使用它？"),s("strong",[t._v("简单地说，它是")]),t._v("Docker守护进程(Docker daemon)"),s("strong",[t._v("默认监听的")]),t._v("Unix域套接字(Unix domain socket)")]),t._v("，容器中的进程可以通过它与Docker守护进程进行通信。这里，便于runner跟docker的守护进程交互。")]),t._v(" "),s("h3",{attrs:{id:"注册-runner"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注册-runner"}},[t._v("#")]),t._v(" 注册 runner")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('gitlab-runner register\n\n  --non-interactive \\\n  --tls-ca-file=/etc/gitlab/ssl/gitlab.example.com.crt  \\\n  --url "http://218.28.35.120:19081/" \\\n  --registration-token "EXY3_sPSpdVHXtMKYHej" \\\n  --executor "docker" \\\n  --docker-image node:latest \\\n  --description "runner " \\\n  --tag-list "run" \\\n  --run-untagged \\\n  --locked="false"\n\n\n')])])]),s("ol",[s("li",[t._v("--url 输入 gitlab 的服务 URL")]),t._v(" "),s("li",[t._v("--registration-token 输入 gitlab-ci 的 Toekn")]),t._v(" "),s("li",[t._v("--tls-ca-file 关于集成服务中对于这个 runner 的描述")]),t._v(" "),s("li",[t._v("--tag-list 给这个 gitlab-runner 输入一个标记，这个 tag 非常重要，在后续的使用过程中需要使用这个 tag 来指定 gitlab-runner")]),t._v(" "),s("li",[t._v("--run-untagged 是否运行在没有 tag 的 build 上面。在配置 gitlab-ci 的时候，会有很多 job，每个 job 可以通过 tags 属性来选择 runner。这里为 true 表示如果 job 没有配置 tags，也执行")]),t._v(" "),s("li",[t._v("--locked 是否锁定 runner 到当前项目")]),t._v(" "),s("li",[t._v("--executor 选择执行器，gitlab-runner 实现了很多执行器，可用在不同场景中运行构建，详情可见"),s("a",{attrs:{href:"https://docs.gitlab.com/runner/executors/README.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitLab Runner Executors"),s("OutboundLink")],1),t._v("，这里选用 Docker 模式")])]),t._v(" "),s("h3",{attrs:{id:"runner-的基本命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#runner-的基本命令"}},[t._v("#")]),t._v(" runner 的基本命令")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("查看状态\ngitlab-runner status\n\n查看runner服务\ngitlab-ci-multi-runner list\n\n重启runner，发现他会自动去执行触发runner的任务\n执行gitlab-ci-multi-runner restart\n")])])]),s("h3",{attrs:{id:"编写-gitlab-ci-yml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编写-gitlab-ci-yml"}},[t._v("#")]),t._v(" 编写.gitlab-ci.yml")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# docker镜像\nimage: node\n# 依赖的docker服务\nservices:\n  - postgres\n# 开始执行脚本前所需执行脚本\nbefore_script:\n  - bundle install\n# 脚本执行完后的钩子，执行所需脚本\nafter_script:\n  - rm secrets\n# 该ci pipeline适合的场景\nstages:\n  - build\n  - test\n  - deploy\n# 定义的任务1\njob1:\n  # 场景为构建\n  stage: build\n  # 所需执行的脚本\n  script:\n    - execute-script-for-job1\n  # 在哪个分支上可用\n  only:\n    - master\n  # 指定哪个ci runner跑该工作\n  tags:\n    - docker\n")])])]),s("h3",{attrs:{id:"解决-gitlab-runner-执行-docker-命令提示权限不足的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决-gitlab-runner-执行-docker-命令提示权限不足的问题"}},[t._v("#")]),t._v(" 解决 gitlab-runner 执行 docker 命令提示权限不足的问题")]),t._v(" "),s("ol",[s("li",[t._v("将 gitlab-runner 用户添加到 docker 组")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("sudo usermod "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("aG docker gitlab"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("runner\n")])])]),s("ol",[s("li",[t._v("验证是否生效：")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("sudo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u gitlab"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("runner "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("H")]),t._v(" docker info\n")])])]),s("h3",{attrs:{id:"完整配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#完整配置"}},[t._v("#")]),t._v(" 完整配置：")]),t._v(" "),s("p",[s("strong",[t._v("Dockerfile")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("FROM nginx\nRUN mkdir /app\nCOPY /dist /app\nCOPY nginx.conf /etc/nginx/nginx.conf\n")])])]),s("p",[t._v("打包完成后创建 nginx 镜像")]),t._v(" "),s("p",[t._v("步骤：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("在镜像的根目录创建 app 文件夹")])]),t._v(" "),s("li",[s("p",[t._v("将打包后的文件复制过去 （/dist 指的是当前项目路径）")])]),t._v(" "),s("li",[s("p",[t._v("将项目中的 nginx 配置文件作为镜像的配置文件")])])]),t._v(" "),s("p",[s("strong",[t._v("nginx.conf")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('user  nginx;\nworker_processes  1;\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\nevents {\n  worker_connections  1024;\n}\nhttp {\n  include       /etc/nginx/mime.types;\n  default_type  application/octet-stream;\n  log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n                    \'$status $body_bytes_sent "$http_referer" \'\n                    \'"$http_user_agent" "$http_x_forwarded_for"\';\n  access_log  /var/log/nginx/access.log  main;\n  sendfile        on;\n  keepalive_timeout  65;\n  server {\n    listen       80;\n    server_name  localhost;\n    location / {\n      root   /app;\n      index  index.html;\n      try_files $uri $uri/ /index.html;\n    }\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n      root   /usr/share/nginx/html;\n    }\n  }\n}\n')])])]),s("p",[s("strong",[t._v("gitlab-ci.yml")])]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stages")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Stages 表示构建阶段，这里有两个阶段 install, deploy")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" build\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" deploy\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("project_build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Jobs 表示构建工作，表示某个 Stage 里面执行的工作。")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义了只有在被merge到了dev分支上 才会执行部署脚本。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" njx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dev\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" vue\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "=====开始依赖安装======"\n    '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm install "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("verbose "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("registry=https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//registry.npm.taobao.org "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装依赖")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "=====开始打包======"\n    '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run build\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("artifacts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将这个job生成的依赖传递给下一个job。需要设置dependencies")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("expire_in")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30 mins "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# artifacets 的过期时间，因为这些数据都是直接保存在 Gitlab 机器上的，过于久远的资源就可以删除掉了")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 需要被传递给下一个job的目录。")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" dist/\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("project_deploy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" njx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dev\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" vue\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "=====开始部署======"\n    '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ls\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker build . "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t finance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("lastest\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker stop finance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("container\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker rm finance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("container\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 8084"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("80 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name finance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("container finance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("lastest\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - sudo cp -r dist/* /usr/local")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - sudo cd /usr/local")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ls\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "=====结束部署======"\n')])])]),s("h3",{attrs:{id:"修改-runner-详细配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改-runner-详细配置"}},[t._v("#")]),t._v(" 修改 runner 详细配置")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('vi /etc/gitlab-runner/\nconcurrent = 4\ncheck_interval = 0\n\n[session_server]\n    session_timeout = 1800\n\n[[runners]]\n    name = "myrunner with docker executor"\n    url = "http://${gitlabIP}"  #gitlab地址\n    #特别注意，这个token不是小本本上的token！！！\n    token ="......"\n    executor = "docker"\n    [runners.docker]\n        host = ""\n        hostname = ""\n        privileged = false\n        tls_verify = false\n        disable_entrypoint_overwrite = false\n        oom_kill_disable = false\n        disable_cache = true\n        pull_policy = "if-not-present"\n        #这是runner的默认镜像；具体镜像maven:3-jdk-8在.gitlab-ci.yml中配置\n        image = "busybox:latest"\n        helper_image = "gitlab-runner-helper:x86_64-f100a208"\n        #映射maven配置\n        volumes = ["/home/v_in_docker/:/usr/share/maven/conf2/:rw"]\n        [runners.docker.sysctls]\n            "net.ipv4.ip_forward" = "1"\n    [runners.cache]\n        [runners.cache.s3]\n        [runners.cache.gc3]\n12345678910111213141516171819202122232425262728293031\n')])])]),s("h5",{attrs:{id:"runners-docker-sysctls-作用等效于"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#runners-docker-sysctls-作用等效于"}},[t._v("#")]),t._v(" [runners.docker.sysctls] 作用等效于")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/sysctl.conf\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#加一行：")]),t._v("\nnet.ipv4.ip_forward"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" sysctl -p\n")])])]),s("h3",{attrs:{id:"runner-执行器为-docker-时发生的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#runner-执行器为-docker-时发生的问题"}},[t._v("#")]),t._v(" runner 执行器为 docker 时发生的问题：")]),t._v(" "),s("h4",{attrs:{id:"_1、找不到-docker-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、找不到-docker-命令"}},[t._v("#")]),t._v(" 1、找不到 docker 命令")]),t._v(" "),s("blockquote",[s("p",[t._v("$ docker info\n/bin/bash: line 81: docker: command not found\nERROR: Job failed: exit code 1")])]),t._v(" "),s("p",[t._v("解决：在编写 gitlab-runner 的 docker-compose.yml 时候，加上挂载宿主机 docker 命令。实现"),s("code",[t._v("docker in docker")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  privileged: true\n    volumes:\n      # 映射docker命令\n      - /var/run/docker.sock:/var/run/docker.sock\n      - /bin/docker:/bin/docker\n\n")])])]),s("h4",{attrs:{id:"_2、没有-docker-权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、没有-docker-权限"}},[t._v("#")]),t._v(" 2、没有 docker 权限")]),t._v(" "),s("blockquote",[s("p",[t._v("Got permission denied while trying to connect to the Docker")])]),t._v(" "),s("p",[t._v("解决：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('#则需要把将当前用户加入docker组\nsudo gpasswd -a ${USER} docker\n\n#或者将当前用户直接加到文件中\nsudo echo "docker:x:994:${USER}" >> /etc/group\n\n#查看docker用户组成员\ncat /etc/group |grep docker\n\n#重新启动docker服务\nsudo systemctl restart docker\n\n# 赋予权限\nsudo chmod a+rw /var/run/docker.sock\n\n')])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('before_script:\n  - docker info\n  - docker login -u "gitlab-ci-token" -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"\n')])])]),s("h2",{attrs:{id:"容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[t._v("#")]),t._v(" 容器")]),t._v(" "),s("h3",{attrs:{id:"容器改名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器改名"}},[t._v("#")]),t._v(" 容器改名")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker rename <container name> <newcontainer name>\n")])])]),s("h3",{attrs:{id:"基本命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本命令"}},[t._v("#")]),t._v(" 基本命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("docker ps -a")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("列出活动的容器")])]),t._v(" "),s("tr",[s("td",[t._v("docker ps -l")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),s("tr",[s("td",[t._v('docker start "container id"')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("启动")])]),t._v(" "),s("tr",[s("td",[t._v('docker stop "contaienr_name"')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("停止")])]),t._v(" "),s("tr",[s("td",[t._v('docker rm "contaienr name"')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("删除容器")])]),t._v(" "),s("tr",[s("td",[t._v('docker top "contaienr name"')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("查看 WEB 应用程序容器的进程")])]),t._v(" "),s("tr",[s("td",[t._v('docker inspect "contaienr name"')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("查看 Docker 的底层信息")])])])]),t._v(" "),s("h3",{attrs:{id:"运行-创建-容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行-创建-容器"}},[t._v("#")]),t._v(" 运行（创建）容器")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ docker run --name nginx-test -p 8080:80 -d nginx\n$ docker run --name <your container name> -p <local port:container port> -d <image name>\n\t\t\t\t\t容器名\t\t\t\t\t本地端口：容器端口\t\t\t镜像名\n")])])]),s("p",[t._v("参数说明：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("--name nginx-test")]),t._v("：容器名称")]),t._v(" "),s("li",[s("strong",[t._v("-p 8080:80")]),t._v("： 端口进行映射，将本地 8080 端口映射到容器内部的 80 端口")]),t._v(" "),s("li",[t._v("**-d **： 设置容器在在后台一直运行")]),t._v(" "),s("li",[s("strong",[t._v("--entrypoint=‘bash’")]),t._v("：进入容器时所带的默认参数。$ docker exec -it nginx-test 等效与$ docker exec -it nginx-test bash")])]),t._v(" "),s("h3",{attrs:{id:"进入容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进入容器"}},[t._v("#")]),t._v(" 进入容器")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ docker exec -it nginx-test bash\n$ docker exec -it <contaienr name>\n")])])]),s("p",[t._v("参数说明：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("--it")]),t._v("：i 是交互模式，t 显示终端，是一个伪"),s("code",[t._v("tty")]),t._v("终端。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("-i")]),t._v(" 保证容器的"),s("code",[t._v("STDIN")]),t._v("（持久的标准输入）是开启的。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("-t")]),t._v(" 为创建的容器分配一个伪 tty 终端")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("bash")]),t._v("：命令行交互")])])]),t._v(" "),s("h3",{attrs:{id:"保存容器副本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保存容器副本"}},[t._v("#")]),t._v(" 保存容器副本")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('docker commit -m="has update" -a="niu" <container id> <author>/<image name>:<tag>\n')])])]),s("p",[t._v("例子")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('docker commit -m="has update" -a="runoob" e218edb10161 runoob/ubuntu:v2\n')])])]),s("p",[t._v("参数说明：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("-m")]),t._v("：提交的描述。")]),t._v(" "),s("li",[s("strong",[t._v("-a")]),t._v("：作者。")])]),t._v(" "),s("h2",{attrs:{id:"容器状态为-exit-1-时的处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器状态为-exit-1-时的处理"}},[t._v("#")]),t._v(" 容器状态为 Exit（1）时的处理")]),t._v(" "),s("p",[t._v("1.第一步查看日志")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker logs -f <container name>\n")])])]),s("p",[t._v("一般在这就能找到问题：可以看到是我们的配置文件有问题")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('[root@iz2ze7hl9oxqoqpukjw25 containers]# docker logs -f nginx2\nnginx: [emerg] unknown directive "//显示索引" in /etc/nginx/nginx.conf:50\nnginx: [emerg] unknown directive "//显示索引" in /etc/nginx/nginx.conf:50\nnginx: [emerg] unexpected "}" in /etc/nginx/nginx.conf:52\nnginx: [emerg] unknown directive "//显示索引" in /etc/nginx/nginx.conf:50\n')])])]),s("h2",{attrs:{id:"运行一些常用的容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行一些常用的容器"}},[t._v("#")]),t._v(" 运行一些常用的容器")]),t._v(" "),s("h3",{attrs:{id:"redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[t._v("#")]),t._v(" redis")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -itd --name redis-test -p 3396:3396 redis\n")])])]),s("h3",{attrs:{id:"mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[t._v("#")]),t._v(" mysql")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -itd --name mysql-niu -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql\n")])])]),s("p",[t._v("yun install -y")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("############################################")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# version : Docker version1.10.3, build 3999ccb-unsupported")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# desc : 当前版本安装的ssh，wget，curl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("############################################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" docker.io/centos\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一次性安装vim，wget，curl，ssh server等必备软件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" yum install"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("y vim wget curl openssh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server sudo\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" mkdir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p /var/run/sshd\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装supervisor工具")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" yum install"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("y Python"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("setuptools\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" easy_install supervisor\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" mkdir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p /var/log/supervisor\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将sshd的UsePAM参数设置成no")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" sed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/UsePAM yes/UsePAM no/g'")]),t._v(" /etc/ssh/sshd_config\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" ssh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("keygen "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t rsa "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f /etc/ssh/ssh_host_rsa_key\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" ssh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("keygen "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t dsa "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f /etc/ssh/ssh_host_dsa_key\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加root账户的密码为123456")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" echo "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root:123456"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" chpasswd\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加测试用户admin，密码admin，并且将此用户添加到sudoers里")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" useradd admin\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" echo"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin:admin"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" chpasswd\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" echo"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin  ALL=(ALL)      ALL"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" /etc/sudoers\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加 supervisord 的配置文件，并复制配置文件到对应目录下面。（supervisord.conf文件和Dockerfile文件在同一路径）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" supervisord.conf/etc/supervisor/supervisord.conf\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器需要开放SSH 22端口")]),t._v("\nEXPOSE22\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行supervisord来同时执行多个命令，使用 supervisord 的可执行路径启动服务。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/bin/supervisord"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n")])])]),s("p",[t._v("supervisord.conf文件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 配置文件包含目录和进程\n# 第一段 supervsord 配置软件本身，使用 nodaemon 参数来运行。\n# 第二段包含要控制的 2 个服务。每一段包含一个服务的目录和启动这个服务的命令。\n\n[supervisord]\nnodaemon=true\n\n[program:sshd]\ncommand=/usr/sbin/sshd -D\n")])])]),s("h1",{attrs:{id:"_1-镜像源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-镜像源"}},[t._v("#")]),t._v(" 1 镜像源")]),t._v(" "),s("blockquote",[s("p",[t._v("setting > Docker Engine")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n  "registry-mirrors": [\n    "https://registry.docker-cn.com",\n     "https://docker.mirrors.ustc.edu.cn"\n  ],\n  "insecure-registries": [],\n  "debug": true,\n  "experimental": true\n}\n')])])]),s("blockquote",[s("p",[t._v("检查是否安装成功：")])]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("docker info")]),t._v("命令：")]),t._v(" "),s("p",[t._v("看到以下信息表示安装成功。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" Registry Mirrors:\n  https://registry.docker-cn.com/\n  https://docker.mirrors.ustc.edu.cn/\n")])])]),s("blockquote",[s("p",[t._v("几个速度比较快的镜像地址")])]),t._v(" "),s("p",[t._v("Docker 官方中国区: https://registry.docker-cn.com")]),t._v(" "),s("p",[t._v("网易: http://hub-mirror.c.163.com")]),t._v(" "),s("p",[t._v("中科大: https://docker.mirrors.ustc.edu.cn")]),t._v(" "),s("h1",{attrs:{id:"_2-docker-拉取-ubuntu-镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker-拉取-ubuntu-镜像"}},[t._v("#")]),t._v(" 2 Docker 拉取 ubuntu 镜像")]),t._v(" "),s("p",[s("code",[t._v("docker pull ubuntu")]),t._v("安装最新版本的 ubuntu 镜像")]),t._v(" "),s("blockquote",[s("p",[t._v("检查是否安装成功")])]),t._v(" "),s("p",[s("code",[t._v("docker images")]),t._v("命令")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("PS C:\\Users\\DELL> docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nubuntu              latest              1d622ef86b13        47 hours ago        83.8MB\n<none>              <none>              10e305a20c54        5 months ago        377MB\ngolang              1.11-alpine         e116d2efa2ab        8 months ago        345MB\n")])])]),s("h1",{attrs:{id:"_3-在-ubuntu-镜像中安装-apt-get"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-在-ubuntu-镜像中安装-apt-get"}},[t._v("#")]),t._v(" 3 在 ubuntu 镜像中安装 apt-get")]),t._v(" "),s("ol",[s("li",[t._v("备份")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" cp /etc/apt/sources.list /etc/apt/sources.list.bak\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("修改源（直接修改，未使用 vi 或者 vim 修改）")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('echo "">sources.list\necho "deb http://mirrors.163.com/ubuntu/ artful main restricted universe multiverse">>sources.list\necho "deb http://mirrors.163.com/ubuntu/ artful-security main restricted universe multiverse">>sources.list\necho "deb http://mirrors.163.com/ubuntu/ artful-updates main restricted universe multiverse">>sources.list\necho "deb http://mirrors.163.com/ubuntu/ artful-proposed main restricted universe multiverse">>sources.list\necho "deb http://mirrors.163.com/ubuntu/ artful-backports main restricted universe multiverse">>sources.list\necho "deb-src http://mirrors.163.com/ubuntu/ artful main restricted universe multiverse">>sources.list\necho "deb-src http://mirrors.163.com/ubuntu/ artful-security main restricted universe multiverse">>sources.list\necho "deb-src http://mirrors.163.com/ubuntu/ artful-updates main restricted universe multiverse">>sources.list\necho "deb-src http://mirrors.163.com/ubuntu/ artful-proposed main restricted universe multiverse">>sources.list\necho "deb-src http://mirrors.163.com/ubuntu/ artful-backports main restricted universe multiverse">>sources.list\n')])])]),s("p",[t._v("在此https://www.jianshu.com/p/2072d1ab11db获取更多信息")]),t._v(" "),s("h1",{attrs:{id:"_4-保存修改后的容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-保存修改后的容器"}},[t._v("#")]),t._v(" 4.保存修改后的容器")]),t._v(" "),s("p",[t._v("查看正在运行的容器"),s("code",[t._v("docker ps")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('PS D:\\dams-vue> docker ps\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n62ecc03257f8 youngniu/ubuntu "/bin/bash" 6 minutes ago Up 6 minutes admiring_shockley\n')])])]),s("p",[t._v("进入正在运行的容器内")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker exec –it 3bd0eef03413（容器id） bash\n")])])]),s("p",[t._v("查看被修改的容器：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker ps -l\n")])])]),s("p",[t._v("提交指定容器保存为新的镜像：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(' docker commit -m="some info" -a="author" <container id> <new image name>\n')])])]),s("p",[t._v("查看本地所有镜像：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker images\n")])])]),s("h1",{attrs:{id:"_5-docker-运行-redis-容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-docker-运行-redis-容器"}},[t._v("#")]),t._v(" 5 docker 运行 redis 容器")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker pull redis:latest\t拉取镜像\n\ndocker images\t查看是否拉去成功\n\ndocker run -itd --name redis-test -p 6379:6379 redis\t运行redis容器\n\ndocker ps\t查看是否运行成功\n\ndocker exec -it redis-test /bin/bash\t进入到当前容器中\n\nredis-cli\t运行redis\n\n")])])]),s("h1",{attrs:{id:"_6-常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-常用命令"}},[t._v("#")]),t._v(" 6 常用命令")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker search mysql\n")])])]),s("h1",{attrs:{id:"_7-安装-sqlserve"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-安装-sqlserve"}},[t._v("#")]),t._v(" 7 安装 sqlserve")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('sudo docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=YourStrong@Passw0rd" -p 1433:1433 --name mssql -d mcr.microsoft.com/mssql/server:2017-latest\n')])])]),s("h1",{attrs:{id:"_8-安装-vim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-安装-vim"}},[t._v("#")]),t._v(" 8 安装 vim")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('mv /etc/apt/sources.list /etc/apt/sources.list.bak\n\necho "deb http://mirrors.163.com/debian/ jessie main non-free contrib" >/etc/apt/sources.list\necho "deb http://mirrors.163.com/debian/ jessie-proposed-updates main non-free contrib" >>/etc/apt/sources.list\necho "deb-src http://mirrors.163.com/debian/ jessie main non-free contrib" >>/etc/apt/sources.list\necho "deb-src http://mirrors.163.com/debian/ jessie-proposed-updates main non-free contrib" >>/etc/apt/sources.list\n\napt-get update\napt-get install -y vim\n\n')])])]),s("h1",{attrs:{id:"使用dockerfile制作tomcat-jdk镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用dockerfile制作tomcat-jdk镜像"}},[t._v("#")]),t._v(" 使用Dockerfile制作tomcat-jdk镜像")]),t._v(" "),s("h3",{attrs:{id:"_1-下载文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-下载文件"}},[t._v("#")]),t._v(" 1.下载文件")]),t._v(" "),s("p",[t._v("tomcat ：https://tomcat.apache.org/download-90.cgi")]),t._v(" "),s("p",[t._v("jdk ：http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html")]),t._v(" "),s("h3",{attrs:{id:"_2-dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-dockerfile"}},[t._v("#")]),t._v(" 2.Dockerfile")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定操作的镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" centos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("7\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将 jdk 和 tomcat 添加到镜像centos的/usr/local/目录下")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" jdk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("8u141"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("linux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("x64.tar.gz /usr/local/\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" apache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tomcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("9.0.36.tar.gz /usr/local/\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 覆盖相关文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#COPY server.xml /usr/local/apache-tomcat-8.5.50/conf/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加环境变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" JAVA_HOME /usr/local/jdk1.8.0_141\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" CLASSPATH $JAVA_HOME/lib/dt.jar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("$JAVA_HOME/lib/tools.jar\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" CATALINA_HOME /usr/local/apache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tomcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("9.0.36\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" PATH $PATH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("$JAVA_HOME/bin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("$CATALINA_HOME/lib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("$CATALINA_HOME/bin\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" TZ="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Asia/Shanghai"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" JAVA_OPTS="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\n    -server \\\n    -Xms3g \\\n    -Xmx3g \\\n    -Xmn512m \\\n    -Xss512K \\\n    -Dfile.encoding=UTF-8 \\\n    -verbose:gc \\\n    -XX:+UseConcMarkSweepGC \\\n    -XX:MaxTenuringThreshold=10 \\\n    -XX:+ExplicitGCInvokesConcurrent \\\n    -XX:GCTimeRatio=19 \\\n    -XX:+UseParNewGC \\\n    -XX:+UseCMSCompactAtFullCollection \\\n    -XX:CMSFullGCsBeforeCompaction=10 \\\n    -XX:+CMSClassUnloadingEnabled \\\n    -XX:+CMSParallelRemarkEnabled \\\n    -XX:CMSInitiatingOccupancyFraction=50 \\\n    -Xnoclassgc \\\n    -XX:SoftRefLRUPolicyMSPerMB=0"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暴露8080端口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 8080\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器启动时运行tomcat")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" /usr/local/apache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tomcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("9.0.36/bin/catalina.sh run\n")])])]),s("h3",{attrs:{id:"_3-build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-build"}},[t._v("#")]),t._v(" 3.build")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[t._v("docker build "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t youngniu/tomcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("9.0.36"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v1 .\n")])])]),s("h3",{attrs:{id:"_4-run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-run"}},[t._v("#")]),t._v(" 4.run")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -idt --name tomcat-isc -p 8100:8080 -v /home/tomcat-isc/webapps:/usr/local/tomcat/webapps -v /home/tomcat-isc/logs:/usr/local/tomcat/logs -v /home/tomcat-isc/conf:/usr/local/tomcat/conf tomcat-9.0.36:v1\n")])])]),s("p",[t._v("说明：")]),t._v(" "),s("p",[t._v("* -d 后台运行")]),t._v(" "),s("p",[t._v('* --name mytomcat 容器名称\n* -v /server/webapps:/usr/local/tomcat/webapps/ 挂载当前项目的运行目录到tomcat下的webapps\n* -e TZ="Asia/Shanghai" 设置时区\n* --privileged=true 设置拥有容器中的真正的root权限\n* -p 8080:8080 映射端口（宿主机port : 容器port）\n* tomcat-8.5.50:v1 镜像的名称')]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\ndocker run -idt --name tomcat-isc -p 8100:8080 -v /home/tomcat-isc/webapps:/usr/local/tomcat/webapps -v /home/tomcat-isc/logs:/usr/local/tomcat/logs -v /home/tomcat-isc/conf:/usr/local/tomcat/conf tomcat:v1\n\n")])])]),s("h1",{attrs:{id:"note"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#note"}},[t._v("#")]),t._v(" note")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("内省性")])]),t._v(" "),s("li",[s("p",[t._v("幂等性")])])]),t._v(" "),s("p",[t._v("Docker官方主页（http://www.docker.com/）。\nDockerHub（http://hub.dockercom）\nDocker官方博客（http://blog.docker.com/）\nDocker官方文档（http://docs.docker.com/）。\nDocker快速入门指南（http://www.docker.com/tryit/）。\nDocker的Github源代码（https://github.com/docker/docker）。\nDocker的IRC频道（irc.freenode.net）。")]),t._v(" "),s("p",[t._v("终端（terminal）=tty=文本的输入输出环境\n控制台（console）=物理终端\nshell=命令行解释器")]),t._v(" "),s("h2",{attrs:{id:"使用tomcat容器部署项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用tomcat容器部署项目"}},[t._v("#")]),t._v(" 使用tomcat容器部署项目")]),t._v(" "),s("h3",{attrs:{id:"_1-运行tomcat容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-运行tomcat容器"}},[t._v("#")]),t._v(" 1.运行tomcat容器")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -idt -p 8081:8080 tomcat\n")])])]),s("p",[s("code",[t._v("-p 8081:8080")]),t._v("\t将本地8081端口映射到容器的8080端口")]),t._v(" "),s("p",[s("code",[t._v("-d")]),t._v("\tdiff的意思，官方解释：Inspect changes to files or directories on a container's filesystem。保存文件变更")]),t._v(" "),s("h3",{attrs:{id:"_2-进入tomcat容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-进入tomcat容器"}},[t._v("#")]),t._v(" 2.进入tomcat容器")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker exec -it <container id>\tbash\n")])])]),s("p",[s("strong",[t._v("初始化的tomcat "),s("code",[t._v("/usr/local/tomcat/webapps")]),t._v(" 文件夹是空的，需要将"),s("code",[t._v("/usr/local/tomcat/webapps.dist")]),t._v("文件中的内容复制到替换过去。")])]),t._v(" "),s("p",[t._v("命令：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cd /usr/local/tomcat\n\nrm webapps\nrm <本地文件夹>\n\nmv webapps.dist webapps\nmv <文件> <更改名字>\n")])])]),s("p",[t._v("这时才可以访问tomcat的欢迎页面")]),t._v(" "),s("h3",{attrs:{id:"_3-保存修改后的容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-保存修改后的容器"}},[t._v("#")]),t._v(" 3.保存修改后的容器")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('docker commit -m="<comment>" -a="<author>" <container id> <author>/<new container name>:<tag>\n')])])]),s("p",[t._v("例子")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('docker commit -m="has update" -a="runoob" e218edb10161 runoob/ubuntu:v2\n')])])]),s("h3",{attrs:{id:"_4-把项目部署到tomcat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-把项目部署到tomcat"}},[t._v("#")]),t._v(" 4.把项目部署到tomcat")]),t._v(" "),s("p",[t._v("查看tomcat容器uuid")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker inspect -f '{{.Id}}' <container name>\n")])])]),s("p",[t._v("得到：容器长uuid")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("fe3ce7d5fbc93c9cedafe362bd091a2ebed9babe610f52a3545ea85cd58a67a3\n")])])]),s("p",[t._v("将本地文件复制到容器中")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("docker cp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("local path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container long id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("contanier path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("例子")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker cp /usr/local/niu/apache-tomcat-9.0.24/webapps/dams fe3ce7d5fbc93c9cedafe362bd091a2ebed9babe610f52a3545ea85cd58a67a3:/usr/local/tomcat/webapps\n")])])]),s("h3",{attrs:{id:"_5我的部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5我的部署"}},[t._v("#")]),t._v(" 5我的部署")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://39.97.184.218:8081/niu/",target:"_blank",rel:"noopener noreferrer"}},[t._v("niu"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"_6-挂载目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-挂载目录"}},[t._v("#")]),t._v(" 6 挂载目录")]),t._v(" "),s("p",[t._v("/home/tomcat-isc/webapps")]),t._v(" "),s("p",[t._v("/usr/local/tomcat/webapps")]),t._v(" "),s("p",[t._v("/home/tomcat-isc/logs")]),t._v(" "),s("p",[t._v("/usr/local/tomcat/logs")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -idt --name tomcat-isc -p 8100:8080 -v /home/tomcat-isc/webapps:/usr/local/tomcat/webapps -v /home/tomcat-isc/logs:/usr/local/tomcat/logs youngniu/tomcat:niu\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);